// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Hybrid approach: Use env vars if available, fallback to hardcoded values for sandbox/development
const SUPABASE_URL = (import.meta as any).env?.VITE_SUPABASE_URL || "https://jzuoawqxqmrsftbtjkzv.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = (import.meta as any).env?.VITE_SUPABASE_ANON_KEY || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp6dW9hd3F4cW1yc2Z0YnRqa3p2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQzNjYwMDcsImV4cCI6MjA2OTk0MjAwN30.iOvn3b02CX_Dch4bWlJbzY6EYLbWrmwpM7sQgAqimd8";

if ((import.meta as any).env?.DEV) {
  // Helpful logging to show which configuration is being used
  const usingEnvVars = !!(import.meta as any).env?.VITE_SUPABASE_URL;
  console.info(`[Supabase] Using ${SUPABASE_URL} ${usingEnvVars ? '(from env vars)' : '(fallback values)'}`);
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Prefer browser storage when available; fall back gracefully in non-DOM contexts
const storage = typeof window !== 'undefined' && typeof window.localStorage !== 'undefined'
  ? window.localStorage
  : undefined;

export const supabase = createClient<Database>(SUPABASE_URL as string, SUPABASE_PUBLISHABLE_KEY as string, {
  auth: {
    storage,
    persistSession: true,
    autoRefreshToken: true,
  }
});