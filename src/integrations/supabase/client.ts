// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = (import.meta as any).env?.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = (import.meta as any).env?.VITE_SUPABASE_ANON_KEY;

if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  const missing = [!SUPABASE_URL && 'VITE_SUPABASE_URL', !SUPABASE_PUBLISHABLE_KEY && 'VITE_SUPABASE_ANON_KEY']
    .filter(Boolean)
    .join(', ');
  // Fail fast to avoid silently pointing at the wrong Supabase project
  throw new Error(`Missing Supabase env: ${missing}. Set these in your runtime environment (.env or deploy settings).`);
}

if ((import.meta as any).env?.DEV) {
  // Helpful in dev to verify which Supabase project we are hitting
  console.info(`[Supabase] Using ${SUPABASE_URL}`);
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Prefer browser storage when available; fall back gracefully in non-DOM contexts
const storage = typeof window !== 'undefined' && typeof window.localStorage !== 'undefined'
  ? window.localStorage
  : undefined;

export const supabase = createClient<Database>(SUPABASE_URL as string, SUPABASE_PUBLISHABLE_KEY as string, {
  auth: {
    storage,
    persistSession: true,
    autoRefreshToken: true,
  }
});